<!DOCTYPE html>
<html lang="en" data-bs-theme="auto">
  <head>
    <script src="./javascripts/color-modes.js"></script>

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content="" />
    <meta
      name="author"
      content="Mark Otto, Jacob Thornton, and Bootstrap contributors"
    />
    <meta name="generator" content="Hugo 0.122.0" />
    <title>Signin Template · Bootstrap v5.3</title>

    <link
      rel="canonical"
      href="https://getbootstrap.com/docs/5.3/examples/sign-in/"
    />

    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/@docsearch/css@3"
    />

    <link
      href="./bootstrap/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous"
    />

    <!-- Favicons -->
    <!-- 
<link rel="apple-touch-icon" href="/docs/5.3/assets/img/favicons/apple-touch-icon.png" sizes="180x180">
<link rel="icon" href="/docs/5.3/assets/img/favicons/favicon-32x32.png" sizes="32x32" type="image/png">
<link rel="icon" href="/docs/5.3/assets/img/favicons/favicon-16x16.png" sizes="16x16" type="image/png">
<link rel="manifest" href="/docs/5.3/assets/img/favicons/manifest.json">
<link rel="mask-icon" href="/docs/5.3/assets/img/favicons/safari-pinned-tab.svg" color="#712cf9">
<link rel="icon" href="/docs/5.3/assets/img/favicons/favicon.ico">
-->

    <meta name="theme-color" content="#712cf9" />

    <style>
      .bd-placeholder-img {
        font-size: 1.125rem;
        text-anchor: middle;
        -webkit-user-select: none;
        -moz-user-select: none;
        user-select: none;
      }

      @media (min-width: 768px) {
        .bd-placeholder-img-lg {
          font-size: 3.5rem;
        }
      }

      .b-example-divider {
        width: 100%;
        height: 3rem;
        background-color: rgba(0, 0, 0, 0.1);
        border: solid rgba(0, 0, 0, 0.15);
        border-width: 1px 0;
        box-shadow: inset 0 0.5em 1.5em rgba(0, 0, 0, 0.1),
          inset 0 0.125em 0.5em rgba(0, 0, 0, 0.15);
      }

      .b-example-vr {
        flex-shrink: 0;
        width: 1.5rem;
        height: 100vh;
      }

      .bi {
        vertical-align: -0.125em;
        fill: currentColor;
      }

      .nav-scroller {
        position: relative;
        z-index: 2;
        height: 2.75rem;
        overflow-y: hidden;
      }

      .nav-scroller .nav {
        display: flex;
        flex-wrap: nowrap;
        padding-bottom: 1rem;
        margin-top: -1px;
        overflow-x: auto;
        text-align: center;
        white-space: nowrap;
        -webkit-overflow-scrolling: touch;
      }

      .btn-bd-primary {
        --bd-violet-bg: #712cf9;
        --bd-violet-rgb: 112.520718, 44.062154, 249.437846;

        --bs-btn-font-weight: 600;
        --bs-btn-color: var(--bs-white);
        --bs-btn-bg: var(--bd-violet-bg);
        --bs-btn-border-color: var(--bd-violet-bg);
        --bs-btn-hover-color: var(--bs-white);
        --bs-btn-hover-bg: #6528e0;
        --bs-btn-hover-border-color: #6528e0;
        --bs-btn-focus-shadow-rgb: var(--bd-violet-rgb);
        --bs-btn-active-color: var(--bs-btn-hover-color);
        --bs-btn-active-bg: #5a23c8;
        --bs-btn-active-border-color: #5a23c8;
      }

      .bd-mode-toggle {
        z-index: 1500;
      }

      .bd-mode-toggle .dropdown-menu .active .bi {
        display: block !important;
      }
    </style>

    <!-- Custom styles for this template -->
    <link href="stylesheets/sign-in.css" rel="stylesheet" />


    <!-- awesome font -->
    <link rel="stylesheet" href="@fortawesome/fontawesome-free/css/all.css" />

  </head>
  <body class="d-flex align-items-center py-4 bg-body-tertiary">



 

    <div
      class="dropdown position-fixed bottom-0 end-0 mb-3 me-3 bd-mode-toggle"
    >
      <button
        class="btn btn-bd-primary py-2 dropdown-toggle d-flex align-items-center"
        id="bd-theme"
        type="button"
        aria-expanded="false"
        data-bs-toggle="dropdown"
        aria-label="Toggle theme (auto)"
      >
        <svg class="bi my-1 theme-icon-active" width="1em" height="1em">
          <use href="#circle-half"></use>
        </svg>
        <span class="visually-hidden" id="bd-theme-text">Toggle theme</span>
      </button>
      <ul
        class="dropdown-menu dropdown-menu-end shadow"
        aria-labelledby="bd-theme-text"
      >
        <li>
          <button
            type="button"
            class="dropdown-item d-flex align-items-center"
            data-bs-theme-value="light"
            aria-pressed="false"
          >
            <svg class="bi me-2 opacity-50" width="1em" height="1em">
              <use href="#sun-fill"></use>
            </svg>
            Light
            <svg class="bi ms-auto d-none" width="1em" height="1em">
              <use href="#check2"></use>
            </svg>
          </button>
        </li>
        <li>
          <button
            type="button"
            class="dropdown-item d-flex align-items-center"
            data-bs-theme-value="dark"
            aria-pressed="false"
          >
            <svg class="bi me-2 opacity-50" width="1em" height="1em">
              <use href="#moon-stars-fill"></use>
            </svg>
            Dark
            <svg class="bi ms-auto d-none" width="1em" height="1em">
              <use href="#check2"></use>
            </svg>
          </button>
        </li>
        <li>
          <button
            type="button"
            class="dropdown-item d-flex align-items-center active"
            data-bs-theme-value="auto"
            aria-pressed="true"
          >
            <svg class="bi me-2 opacity-50" width="1em" height="1em">
              <use href="#circle-half"></use>
            </svg>
            Auto
            <svg class="bi ms-auto d-none" width="1em" height="1em">
              <use href="#check2"></use>
            </svg>
          </button>
        </li>
      </ul>
    </div>

    <main class="form-signin w-100 m-auto">
      <p>
        <i class="fa-regular fa-circle-user fa-4x"></i>
        <a href="/">ROOT</a>
      </p>
      <form id="loginForm" action="/loginproc" method="POST">
        Login with Session 
        <!-- <img
          class="mb-4"
          src="/docs/5.3/assets/brand/bootstrap-logo.svg"
          alt=""
          width="72"
          height="57"
        />
         -->
        <h1 class="h3 mb-3 fw-normal">Please sign in</h1>

        <div class="form-floating">
          <input
            type="text"
            class="form-control"
            id="loginId"
            name="userid"
            placeholder="Input ID"
          />
          <label for="loginId">ID</label>
        </div>
        <div class="form-floating">
          <input
            type="password"
            class="form-control"
            id="loginPwd"
            name="userpwd"
            placeholder="Input Password"
          />
          <label for="loginPwd">Password</label>
        </div>

        <div class="form-check text-start my-3">
          <input
            class="form-check-input"
            type="checkbox"
            value="remember-me"
            id="rememberMe"
          />
          <label class="form-check-label" for="rememberMe"> Remember me </label>
        </div>
        <button class="btn btn-primary w-100 py-2" type="submit" id="btnSignin">
          Sign in
        </button>
        <p class="mt-5 mb-3 text-body-secondary">&copy; 2017–2024</p>
      </form>
    </main>
    <script
      src="/bootstrap/js/bootstrap.bundle.min.js"
      integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
      crossorigin="anonymous"
    ></script>

    <script>
      // Function to get the value of a cookie by name
      function getCookie(name) {
        var cookies = document.cookie.split("; ");
        for (var i = 0; i < cookies.length; i++) {
          var cookie = cookies[i].split("=");
          if (cookie[0] === name) {
            return cookie[1];
          }
        }
        return null;
      }
      // Function to encode using Base64
      function base64Encode(str) {
        try {
          return btoa(unescape(encodeURIComponent(str)));
        } catch (e) {
          return "";
        }
      }

      // Function to decode using Base64
      function base64Decode(str) {
        try {
          return decodeURIComponent(escape(atob(str)));
        } catch (e) {
          return "";
        }
      }

      // Function to get the expiration date for the cookie
      function getCookieExpiration(days) {
        var date = new Date();
        date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);
        return date.toUTCString();
      }

      // Function to handle the login process
      function handleLogin() {
        // Get the login ID input element
        var loginIdInput = document.getElementById("loginId");

        // Check if the "Remember Me" checkbox is checked
        var rememberMeCheckbox = document.getElementById("rememberMe");
        var rememberMeChecked = rememberMeCheckbox.checked;

        // Get the login ID value
        var loginId = loginIdInput.value;
        // Encode the login ID using Base64 encoding
        var encodedLoginId = base64Encode(loginId);

        // Save the login ID in a cookie if "Remember Me" is checked
        if (rememberMeChecked) {
          // Set the cookie with a 7-day expiration (adjust as needed)
          document.cookie = `loginId=${encodedLoginId}; expires=${getCookieExpiration(
            7
          )}`;
        }
        // For demonstration purposes, let's log the login ID to the console
        console.log("Login ID:", loginId);
      }

      // Function to check for and populate the login ID from the cookie on page load
      window.onload = function () {
        var loginIdInput = document.getElementById("loginId");
        // Get the login ID from the cookie
        var loginIdFromCookie = getCookie("loginId");
        // Decode the login ID using Base64 decoding
        var decodedLoginId = loginIdFromCookie
          ? base64Decode(loginIdFromCookie)
          : "";

        document.getElementById("loginId").focus();

        document
          .getElementById("btnSignin")
          .addEventListener("click", function (event) {
            event.preventDefault();
            handleLogin();
            var frm = document.getElementById("loginForm");
            frm.submit();
          });

        // Populate the login ID input if found in the cookie
        if (decodedLoginId) {
          loginIdInput.value = decodedLoginId;
          document.getElementById("loginPwd").focus();
        }

        var errmsg = "<%= errmsg %>";
        if (errmsg == "") {
        } else {
          switch (errmsg) {
            case "IDFAIL":
              alert("ID가 존재하지 않습니다.");
              break;
            case "PWDFAIL":
              alert("Password가 일치하지 않습니다.");
              break;
            default:
              a;
              alert(errmsg);
          }
        }
      };
    </script>
  </body>
</html>
